openapi: 3.0.1
info:
    title: API Leads
    description: API de leads - Clean Archteture, SOLID, Design Paterns
    version: "0.1"

paths:
    /api/leads/{id}:
        get:
            tags:
                - Leads
            summary: "Obtém um lead pelo ID"
            description: "Este endpoint retorna os detalhes de um lead baseado no seu ID."
            operationId: "getLead"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "ID do lead a ser buscado"
                  schema:
                      type: string
                      example: "66eb9df69df8435b5aeb3e12"
            responses:
                "200":
                    description: "Lead encontrado com sucesso"
                    content:
                        application/json:
                            schema:
                              $ref: "#/components/entities/Lead"
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "403":
                    $ref: "#/components/responses/Forbidden"
                "404":
                    $ref: "#/components/responses/NotFound"
                "500":
                    $ref: "#/components/responses/InternalError"

            security:
                - bearerAuth: []

        put:
            tags:
                - Leads
            summary: "Atualiza um lead existente"
            description: "Este endpoint permite atualizar um lead existente no sistema. O payload é o mesmo do endpoint de criação, mas nenhum campo é obrigatório."
            operationId: "updateLead"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "ID do Lead a ser atualizado"
                  schema:
                      type: string
                      example: "66eb9df69df8435b5aeb3e12"
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: "Thomas Domingos"
                                email:
                                    type: string                        
                                    example: "thomasdomingos@kenlo.com.br"
                                phone:
                                    type: string                        
                                    example: "+5519981335164"
            responses:
                "204":
                    description: "Lead atualizado com sucesso"
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "403":
                    $ref: "#/components/responses/Forbidden"
                "404":
                    $ref: "#/components/responses/NotFound"
                "500":
                    $ref: "#/components/responses/InternalError"

            security:
                - bearerAuth: []

        delete:
            tags:
                - Leads
            summary: "Deleta um lead pelo ID"
            description: "Este endpoint deleta um lead baseado no seu ID."
            operationId: "deleteLead"
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "ID do lead a ser deletado"
                  schema:
                      type: string
                      example: "66eb9df69df8435b5aeb3e10"
            responses:
                "204":
                    description: "Lead deletado com sucesso (sem retorno de conteúdo)"
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "403":
                    $ref: "#/components/responses/Forbidden"
                "404":
                    $ref: "#/components/responses/NotFound"
                "500":
                    $ref: "#/components/responses/InternalError"

            security:
                - bearerAuth: []

    /api/leads:
        post:
            tags:
                - Leads
            summary: "Cria um novo Lead"
            description: "Este endpoint permite criar um novo lead no sistema."
            operationId: "createLead"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                              name:
                                type: string
                                example: 'Thomas Domingos'
                              email:
                                type: string
                                example: "thomasdomingos@kenlo.com.br"
                              phone:
                                type: string
                                example: "+5519981335164"
            responses:
                "201":
                    description: "Lead criado com sucesso"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: "66e7cf44d4f1c84f35ef1215"
                                  name:
                                    type: string
                                    example: 'Thomas Domingos'
                                  email:
                                    type: string
                                    example: "thomasdomingos@kenlo.com.br"
                                  phone:
                                    type: string
                                    example: "+5519981335164"
                "400":
                    $ref: "#/components/responses/BadRequest"
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "403":
                    $ref: "#/components/responses/Forbidden"
                "500":
                    $ref: "#/components/responses/InternalError"

            security:
                - bearerAuth: []
        get:
          tags:
            - Leads
          summary: "Obtém uma lista de leads"
          description: "Este endpoint retorna uma lista paginada de leads com base nos parâmetros fornecidos."
          operationId: "getLeads"
          parameters:
            - name: page
              in: query
              required: true
              description: "Número da página de resultados para paginação."
              schema:
                type: integer
                example: 1
                minimum: 1
            - name: perPage
              in: query
              required: true
              description: "Número de lead por página para paginação."
              schema:
                type: integer
                example: 10
                minimum: 1
            - name: name
              in: query
              description: "Nome do lead para filtrar resultados."
              schema:
                type: string
            - name: email
              in: query
              description: "Email do lead para filtrar resultados."
              schema:
                type: string
            - name: phone
              in: query
              description: "Phone do lead para filtrar resultados."
              schema:
                type: string
          security:
            - bearerAuth: []
          responses:
            '200':
              description: "Lista de Leads retornada com sucesso."
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/entities/Lead"
                      totalRows:
                        type: integer
                        example: 22
                      totalPages:
                        type: integer
                        example: 1
                      perPage:
                        type: integer
                        example: 10
                      page:
                        type: integer
                        example: 1
            '401':
              description: "Não autorizado, token Bearer ausente ou inválido."
            '400':
              description: "Requisição malformada, verifique os parâmetros fornecidos."
          security:
            - bearerAuth: []

    /api/leads/{id}/interactions:
        post:
            tags:
                - Lead - Interactions
            summary: "Adicionar uma interação ao lead"
            description: "Este endpoint permite adcionar uma nova interação ao lead."
            operationId: "createLead"
            parameters:
              - name: id
                in: path
                required: true
                description: "ID do lead a ser buscado"
                schema:
                    type: string
                    example: "66eb9df69df8435b5aeb3e12"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                              message:
                                type: string
                                example: 'Porque o Thomas deve ser contratado?'
                              response:
                                type: string
                                example: "Porque ele é o candidato mais preparado para solucionar os problemas do mercado imobiliario."
                              timestamp:
                                type: string
                                example: "2024-09-20T05:00:00Z"
            responses:
                "201":
                    description: "Interaction adicionado ao Lead com sucesso"
                    content:
                        application/json:
                            schema:
                              $ref: "#/components/entities/Lead"
                "400":
                    $ref: "#/components/responses/BadRequest"
                "401":
                    $ref: "#/components/responses/Unauthorized"
                "403":
                    $ref: "#/components/responses/Forbidden"
                "500":
                    $ref: "#/components/responses/InternalError"

            security:
                - bearerAuth: []
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    entities:
      Lead:
        type: object
        properties:
          _id:
            type: string
            example: "66e7cf44d4f1c84f35ef1215"
          name:
            type: string
            example: 'Thomas Domingos'
          email:
            type: string
            example: "thomasdomingos@kenlo.com.br"
          phone:
            type: string
            example: "+5519981335164"
          interactions:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
                  example: "Porque o Thomas deve ser contratado?"
                response:
                  type: string
                  example: "Porque ele é o candidato mais preparado para solucionar os problemas do mercado imobiliário; Possuindo mais de 2 anos de experiência com serviços de tecnologias para imobiliárias."
                createdAt:
                  type: string
                  format: date-time
                  example: "2024-09-20T05:00:00.000Z"

    responses:
        Unauthorized:
            description: "Token de autenticação inválido ou ausente"
        Forbidden:
            description: "Acesso negado para este recurso"
        NotFound:
            description: "Recurso não encontrado"
        InternalError:
            description: "Erro interno no servidor"
        BadRequest:
            description: "Requisição malformada ou dados inválidos"
